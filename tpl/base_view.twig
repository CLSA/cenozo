{##
 # base_view.twig
 # 
 # Extends the base_record template for adding records.
 # @author Patrick Emond <emondpd@mcmaster.ca>
 #}
{% extends "base_record.twig" %}

{% block javascript %}

  {{ parent() }}
  <script type="text/javascript">
    $( function () {
      {% if actions|length %}
        // action buttons
        {% for action_id, action in actions %}
          {% if action.type and action.subject and action.name %}
            $( "#{{ widget.full }}__{{ action_id }}" ).click( function() {
              var args = Object();
              args.id = {{ id|default(0) }};
              {% if 'widget' == action.type %}
                slot_load( {{ slot }}, "{{ action.subject }}", "{{ action.name }}", args );
              {% else %}
                ajax_{{ action.type }}( "{{ action.subject }}", "{{ action.name }}", args );
              {% endif %}
            } );
          {% endif %}

        {% endfor %}
      {% endif %}

      {% if removable %}
        $( "#{{ widget.full }}__remove" ).click( function() {
          confirm_dialog(
            "Delete {{ widget.subject_name }}?",
            "Are you sure you want to remove this {{ widget.subject_name }}?",
            function() {
              var args = Object();
              args.id = {{ id|default(0) }};
              if( ajax_push( "{{ widget.subject }}", "delete", args ) ) {
                $slot = $( "#" + {{ slot }} + "_slot" );
                if( "#main_slot" == $slot.selector ) slot_prev( {{ slot }} );
                else $slot.dialog( "close" ); // assume we're in a popup dialog
              }
            }
          );
        } );
      {% endif %}
    } );

    {# Only add the following javascript once #}
    {% if 1 >= base_view_count %}
      $( function () {
        // identify a mutable element by changing classes on mouse over/out
        $( "div.mutable" ).mouseover( function() {
          $(this).removeClass( "padded" );
          $(this).addClass( "ui-widget-content" );
        } )
        $( "div.mutable" ).mouseout( function() {
          $(this).removeClass( "ui-widget-content" );
          $(this).addClass( "padded" );
        } )
      } );
      
      /**
       * Processes jeditable value changes.
       * @author Patrick Emond <emondpd@mcmaster.ca>
       * @param string new_value The elements new value.
       * @param string type The type of element being edited.
       */
      function process_change( widget_subject, widget_name, element, new_value, type ) {
        // don't do anything if there hasn't been any change to the value
        var old_value = $( "#old_" + element.attr( 'id' ) ).val();
        if( new_value == old_value ) return old_value;
        
        var widget_full = widget_subject + "_" + widget_name;

        // build the args object
        var id_string = element.attr( 'id' );
        var column_name = id_string.substring( id_string.lastIndexOf('__') + 2 );
        var args = new Object();
        args.id = {{ id|default(0) }};
        var columns = new Object();
        
        // when changing start_time, also adjust end_time
        if( ( 'time' == type || 'timesec' == type ) && 'start_time' == column_name ) {
          // determine the time difference between the old and new time
          end_time_obj =
            new Date( "Jan 2, 2000 " + $( "#old_" + widget_full + "__end_time" ).val() );
          old_time_obj = new Date( "Jan 2, 2000 " + old_value );
          new_time_obj = new Date( "Jan 2, 2000 " + new_value );
          end_time_obj.setTime(
            end_time_obj.getTime() + ( new_time_obj.getTime() - old_time_obj.getTime() ) );
          var hours = ( end_time_obj.getHours() < 10 ? '0' : '' ) + end_time_obj.getHours();
          var minutes = ( end_time_obj.getMinutes() < 10 ? '0' : '' ) + end_time_obj.getMinutes();
          columns.end_time = hours + ":" + minutes;

          // add seconds for timesec types
          if( 'timesec' == type ) {
            var seconds = ( end_time_obj.getSeconds() < 10 ? '0' : '' ) + end_time_obj.getSeconds();
            columns.end_time = columns.end_time + ":" + seconds;
          }
        }
      
        // make sure to change empty strings for boolean and enum values to NULL
        if( 'boolean' == type || 'enum' == type )
          columns[column_name] = 'NULL' == new_value ? '' : new_value;
        else columns[column_name] = new_value;
        args.columns = columns;

        {% block pre_edit %}{% endblock pre_edit %}

        // push the changed data, updating the hidden "old" input upon success
        if( ajax_push( widget_subject, "edit", args ) ) {
          // if we are setting start_time, then update end_time
          if( ( 'time' == type || 'timesec' == type ) && 'start_time' == column_name ) {
            $( "#old_" + widget_full + "__end_time" ).val( columns.end_time );
            $( "#" + widget_full + "__end_time" ).val( columns.end_time );
          }
      
          // update the old value
          $( "#old_" + element.attr( 'id' ) ).val( new_value );

          {% block post_edit %}{% endblock post_edit %}

          return new_value;
        } else {
          // put the old value back
          element.val( old_value );
        }
      
        return old_value;
      }
    {% endif %}
  </script>

{% endblock javascript %}

{% block record_items %}
  <table>
    {% block record_extra_pre_items %}{% endblock record_extra_pre_items %}
    {% for item_id, entry in item %}
    
      {% if 'hidden' != entry.type %}
        {# make null entries an empty string #}
        {% set entry_value = entry.value is defined ? entry.value : "" %}
        {% if 'enum' == entry.type %}
          {% set enum_display_value = '' == entry_value
                                    ? entry.enum['NULL']
                                    : entry.enum[entry_value] %}
        {% endif %}
  
        <tr>
          <td class="heading">
            <span class="title">{{ entry.heading }}:</span>
          </td>
          <td class="content" style="padding-top: 0.5em; padding-bottom: 0.5em">
    
            {% if 'constant' == entry.type or not editable %}
          
              {% if 'enum' == entry.type %}
                <div id="{{ widget.full }}__{{ item_id }}"
                     class="padded">{{ enum_display_value }}</div>
              {% else %}
                <div id="{{ widget.full }}__{{ item_id }}"
                     class="padded">{{ entry_value }}</div>
              {% endif %}
      
            {% elseif 'text' == entry.type %}
          
              <script type="text/javascript">
                $( function () {
                  // create the dialog
                  $( "#{{ widget.full }}_dialog_{{ id|default(0) }}__{{ item_id }}" ).dialog( {
                    title: "Edit {{ item_id }}",
                    modal: true,
                    width: 450,
                    autoOpen: false,
                    buttons: {
                      Ok: function() {
                        // build the args object
                        var id_string = $(this).attr( "id" );
                        var column_name = id_string.substring( id_string.lastIndexOf("__") + 2 );
                        var args = new Object();
                        args.id = {{ id|default(0) }};
                        var columns = new Object();
                        columns[column_name] = $(this).children( "textarea" ).val();
                        args.columns = columns;
            
                        // push the data, reload the record on success
                        if( ajax_push( "{{ widget.subject }}", "edit", args ) )
                          slot_refresh( {{ slot }} );
            
                        $(this).dialog( "close" );
                      },
                      Cancel: function() {
                        $(this).dialog( "close" );
                      }
                    }
                  } );
                
                  // open the dialog when the text is clicked
                  $( "#{{ widget.full }}__{{ item_id }}" ).click( function () {
                    $( "#{{ widget.full }}_dialog_{{ id|default(0) }}__{{ item_id }}" ).dialog( "open" );
                  } );
                } );
              </script>
        
              <div id="{{ widget.full }}_dialog_{{ id|default(0) }}__{{ item_id }}">
                <textarea id="{{ widget.full }}__{{ item_id }}">{{ entry_value|e }}</textarea>
              </div>
              {% autoescape false %}
                <div class="mutable padded editable_text"
                     style="min-height: 6em;"
                     id="{{ widget.full }}__{{ item_id }}">{{ entry_value|e|nl2br }}</div>
              {% endautoescape %}
          
            {% else %} {# not a text or constant entry type #}
        
              <script type="text/javascript">
                $( function () {
                  // set up jeditable element
                  var jeditable_params = new Object();
                  jeditable_params.tooltop = "click to edit";
                  jeditable_params.cssclass = "ui-state-default";
                  jeditable_params.event = "click";
                  jeditable_params.onblur = "cancel";
                  jeditable_params.placeholder = "&nbsp;";
                  jeditable_params.submit = "save";
                  jeditable_params.cancel = "cancel";
                  
                  {% if 'string' == entry.type or 'number' == entry.type %}
        
                    {% if 'number' == entry.type %}jeditable_params.placeholder = "0";{% endif %}
                    jeditable_params.type = "text";
                    $( "div.jeditable_{{ item_id }}" ).editable( function( value, settings ) {
                      return process_change(
                        "{{ widget.subject }}",
                        "{{ widget.name }}",
                        $(this),
                        value,
                        "{{ entry.type }}" );
                    }, jeditable_params );
                  
                  {% elseif 'boolean' == entry.type %}
        
                    jeditable_params.type = "select";
                    jeditable_params.data = '{ ' +
                                            {% if not entry.required %}
                                            '"NULL":"",' +
                                            {% endif %}
                                            '"1":"Yes", "0":"No", "selected":"Yes" }';
                    $( "div.jeditable_{{ item_id }}" ).editable( function( value, settings ) {
                      var index = process_change(
                        "{{ widget.subject }}",
                        "{{ widget.name }}",
                        $(this),
                        value,
                        "{{ entry.type }}" );
                      var data = jQuery.parseJSON( jeditable_params.data );
                      return data[index];
                    }, jeditable_params );
                  
                  {% elseif 'enum' == entry.type and 1 < entry.enum|length %}
          
                    jeditable_params.type = "select";
                    jeditable_params.data = '{ ' +
                                            {% for id, value in entry.enum %}
                                            '"{{ id }}":"{{ value }}",' +
                                            {% endfor %}
                                            '"selected":"{{ entry_value }}" }';
                    $( "div.jeditable_{{ item_id }}" ).editable( function( value, settings ) {
                      var index = process_change(
                        "{{ widget.subject }}",
                        "{{ widget.name }}",
                        $(this),
                        value,
                        "{{ entry.type }}" );
                      var data = jQuery.parseJSON( jeditable_params.data );
                      return data[index];
                    }, jeditable_params );
                  
                  {% elseif 'datetime' == entry.type or 'datetimesec' == entry.type %}
                
                    $input_{{ item_id }} = $( "input.datetimepicker_{{ item_id }}" );
                    $input_{{ item_id }}.datetimepicker( {
                      dateFormat: 'yy-mm-dd',
                      timeFormat: {{ 'datetime' == entry.type ? '"hh:mm"' : '"hh:mm:ss"' }},
                      ampm: false,
                      {% if 'datetime' == entry.type %}
                        stepMinute: 5,
                      {% else %}
                        showSecond: true,
                        stepMinute: 1,
                        stepSecond: 1,
                      {% endif %}
                      showAnim: 'slideDown',
                      onClose: function( dateText, inst ) {
                        return process_change(
                          "{{ widget.subject }}",
                          "{{ widget.name }}",
                          $input_{{ item_id }},
                          dateText,
                          "{{ entry.type }}" );
                      }
                    } );
          
                  {% elseif 'date' == entry.type %}
          
                    $input_{{ item_id }} = $( "input.datepicker_{{ item_id }}" );
                    $input_{{ item_id }}.datepicker( {
                      dateFormat: 'yy-mm-dd',
                      showAnim: 'slideDown',
                      onClose: function( dateText, inst ) {
                        return process_change(
                          "{{ widget.subject }}",
                          "{{ widget.name }}",
                          $input_{{ item_id }},
                          dateText,
                          "{{ entry.type }}" );
                      }
                    } );
                  
                  {% elseif 'time' == entry.type or 'timesec' == entry.type %}
          
                    $input_{{ item_id }} = $( "input.timepicker_{{ item_id }}" );
                    $input_{{ item_id }}.timepicker( {
                      timeFormat: {{ 'time' == entry.type ? '"hh:mm"' : '"hh:mm:ss"' }},
                      showAnim: "slideDown",
                      ampm: false,
                      {% if 'time' == entry.type %}
                        stepMinute: 5,
                      {% else %}
                        showSecond: true,
                        stepMinute: 1,
                        stepSecond: 1,
                      {% endif %}
                      onClose: function( timeText, date_inst, time_inst ) {
                        return process_change(
                          "{{ widget.subject }}",
                          "{{ widget.name }}",
                          $input_{{ item_id }},
                          timeText,
                          "{{ entry.type }}" );
                      }
                    } );
          
                  {% endif %}
                } );
              </script>
          
              <input id="old_{{ widget.full }}__{{ item_id }}"
                     value="{{ entry_value }}"
                     type="hidden" />
              {% if 'boolean' == entry.type %}
      
                <div id="{{ widget.full }}__{{ item_id }}"
                     class="mutable padded jeditable_{{ item_id }}">{{ entry_value }}</div>
        
              {% elseif 'datetime' == entry.type or 'datetimesec' == entry.type %}
      
                <div class="mutable padded">
                  <input id="{{ widget.full }}__{{ item_id }}" type="text"
                         class="ui-widget-content datetimepicker_{{ item_id }}"
                         value="{{ entry_value }}"
                         style="border: 0px; background: transparent; width: 100%;" readonly />
                </div>
      
              {% elseif 'date' == entry.type %}
    
                <div class="mutable padded">
                  <input id="{{ widget.full }}__{{ item_id }}" type="text"
                         class="ui-widget-content datepicker_{{ item_id }}"
                         value="{{ entry_value }}"
                         style="border: 0px; background: transparent; width: 100%;" readonly />
                </div>
      
              {% elseif 'time' == entry.type or 'timesec' == entry.type %}
      
                <div class="mutable padded">
                  <input id="{{ widget.full }}__{{ item_id }}" type="text"
                         class="ui-widget-content timepicker_{{ item_id }}"
                         value="{{ entry_value }}"
                         style="border: 0px; background: transparent; width: 100%;" />
                </div>
      
              {% elseif 'enum' == entry.type %}
                
                {% if 1 == entry.enum|length %}
                  <div id="{{ widget.full }}__{{ item_id }}"
                       class="padded">{{ enum_display_value }}</div>
                {% else %}
                  <div id="{{ widget.full }}__{{ item_id }}"
                       class="mutable padded jeditable_{{ item_id }}">{{ enum_display_value }}</div>
                {% endif %}
      
              {% else %}
      
                <div id="{{ widget.full }}__{{ item_id }}"
                     class="mutable padded jeditable_{{ item_id }}">{{ entry_value }}</div>
    
              {% endif %}
          
            {% endif %}
        
            {% if entry.note is defined %}
              <div class="help_note {{ entry.note_is_error ? "ui-state-error" : "" }}">
                {% autoescape false %}
                  {{ entry.note }}
                {% endautoescape %}
              </div>
            {% endif %}
          </td>
        </tr>
        {% if not loop.last %}
          <tr><td></td><td><hr class="ui-widget ui-widget-content" /></td></tr>
        {% endif %}
      {% endif %}
    {% endfor %}
    {% block record_extra_post_items %}{% endblock record_extra_post_items %}
    {% if actions|length %}
      <tr><td colspan="22"><hr class="ui-widget ui-widget-content"></td></tr>
      <tr>
        <td class="heading"><span class="title">Actions:</span></td>
        <td class="content">
          {% for action_id, action in actions %}
            <button {% if action.description|default(false) %}
                      title="{{ action.description }}"
                    {% endif %}
                    id="{{ widget.full }}__{{ action_id }}">{{ action.heading }}</button>
          {% endfor %}
        </td>
    {% endif %}

  </table>
{% endblock record_items %}
