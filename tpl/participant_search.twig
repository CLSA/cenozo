{##
 # participant_search.twig
 # 
 # Interface for searching participants based on partial information
 # @author Patrick Emond <emondpd@mcmaster.ca>
 # @see widget.twig for parameters
 #}
{% extends "widget.twig" %}

{% block javascript %}

  {{ parent() }}
  <script type="text/javascript">
    // build the interface based on javascript's parameter_list array
    function build_table( parameter_list ) {
      var subject_list = [
        'address',
        'address note',
        'city',
        'date of birth',
        'email',
        'gender',
        'region',
        'participant note',
        'phone number',
        'phone note',
        'postcode'
      ];
      var html = '';

      for( scenario = 0; scenario < parameter_list.length; scenario++ ) {
        if( 1 < parameter_list.length ) {
          if( 0 < scenario ) html += '<tr><td colspan="5"><hr class="ui-widget ui-widget-content"></td></tr>';
          html += '<tr>'
                +   '<td colspan="5" class="heading">' + ( 0 < scenario ? 'OR ' : '' ) + 'Scenario #' + ( scenario + 1 )
                +     ' <button class="{{ widget.full }}__remove" id="{{ widget.full }}__remove_scenario_' + scenario + '">remove</button>'
                +   '</td>'
                + '</tr>';
        }

        for( index = 0; index < parameter_list[scenario].length; index++ ) {
          var parameter = parameter_list[scenario][index];
          html += 
              '<tr>'
            +   '<td class="heading">' + ( 0 < index ? 'and' : '' ) + '</td>'
            +   '<td class="heading">'
            +     '<select id="{{ widget.full }}__subject_' + scenario + '_' + index + '" class="ui-state-default">';
          
          for( subject = 0; subject < subject_list.length; subject++ )
            html += '<option' + ( subject_list[subject] == parameter.subject ? ' selected' : '' ) + '>'
                  + subject_list[subject] + '</option>';

          html +=
                  '</select>'
            +   '</td>'
            +   '<td class="heading">'
            +     '<select id="{{ widget.full }}__like_' + scenario + '_' + index + '" class="ui-state-default">'
            +       '<option' + ( 1 == parameter.like ? ' selected' : '' ) + ' value="1">like</option>'
            +       '<option' + ( 0 == parameter.like ? ' selected' : '' ) + ' value="0">not like</option>'
            +     '</select>'
            +   '</td>'
            +   '<td class="content">'
            +     '<input type="text" id="{{ widget.full }}__text_' + scenario + '_' + index + '"'
            +            'class="ui-widget-content" style="width:100%" value="' + parameter.text + '" />'
            +   '</td>'
            +   '<td><button class="{{ widget.full }}__remove" '
            +               'id="{{ widget.full }}__remove_' + scenario + '_' + index + '"'
            +               ( 1 < parameter_list[scenario].length ? '' : 'disabled' ) + '>remove</button></td>'
            + '</tr>';
        }
        html +=
            '<tr>'
          +   '<td colspan="4"></td>'
          +   '<td><button class="{{ widget.full }}__add"'
          +               'id="{{ widget.full }}__add_' + scenario + '">add</button></td>'
          + '</tr>';
      }
      $( "#{{ widget.full }}__form" ).html( html );

      // set up the inputs
      $( "#{{ widget.full }}__form :input" ).each( function() {
        var id_string = $(this).attr( "id" );
        var compound = id_string.substring( id_string.lastIndexOf('__') + 2 );
        var subject = compound.substring( 0, compound.indexOf('_') );
        var scenario = compound.substring( compound.indexOf('_') + 1, compound.lastIndexOf('_') );
        var index = compound.substring( compound.lastIndexOf('_') + 1 );
        $(this).change( function() { window.parameter_list[scenario][index][subject] = $(this).val(); } );
      } );

      // set up the add buttons
      $( "button.{{ widget.full }}__add" ).button( {
        text: false,
        icons: { primary: "ui-icon-plusthick" }
      } ).click( function() {
        // add a search parameter
        var id_string = $(this).attr( "id" );
        var compound = id_string.substring( id_string.lastIndexOf('__') + 2 );
        var scenario = compound.substring( compound.lastIndexOf('_') + 1 );
        
        window.parameter_list[scenario].push( {
          subject: "phone number",
          like: 1,
          text: ""
        } );
        build_table( window.parameter_list );
      } );

      // set up the remove buttons
      $( "button.{{ widget.full }}__remove" ).button( {
        text: false,
        icons: { primary: "ui-icon-closethick" }
      } ).click( function() {
        var id_string = $(this).attr( "id" );
        var compound = id_string.substring( id_string.lastIndexOf('__') + 2 );

        if( compound.match( /remove_scenario/ ) ) {
          var scenario = compound.substring( compound.lastIndexOf('_') + 1 );
          window.parameter_list.splice( scenario, 1 );
        } else {
          var scenario = compound.substring( compound.indexOf('_') + 1, compound.lastIndexOf('_') );
          var index = compound.substring( compound.lastIndexOf('_') + 1 );
          window.parameter_list[scenario].splice( index, 1 );
        }

        build_table( window.parameter_list );
      } );
    }

    // build the pre-existing parameter list
    {% if 0 == parameter_list|length %}
      window.parameter_list = [ [ {
        subject: "phone number",
        like: 1,
        text: ""
      } ] ];
    {% else %}
      window.parameter_list = [
      {% for scenario, scenario_list in parameter_list %}
        [
          {% for index, parameter in scenario_list %}
            {
              subject: "{{ parameter.subject }}",
              like: "{{ parameter.like }}",
              text: "{{ parameter.text }}"
            },
          {% endfor %}
        ],
      {% endfor %}
      ];
    {% endif %}
    build_table( window.parameter_list );

    $( function () {
      // set up the add scenario button
      $( "#{{ widget.full }}__add_scenario" ).click( function() {
        window.parameter_list.push( [ {
          subject: "address",
          like: 1,
          text: ""
        } ] );
        build_table( window.parameter_list );
      } );

      $( "#{{ widget.full }}__search" ).click( function() {
        var proceed = true;
        for( scenario = 0; scenario < window.parameter_list.length; scenario++ ) {
          for( index = 0; index < window.parameter_list[scenario].length; index++ ) {
            if( 0 == window.parameter_list[scenario][index].text.length ) {
              proceed = false;
              error_dialog(
                "Error: Search parameter blank",
                "<p>You cannot leave a search parameter blank.  Please fill in all search " +
                "parameters and try again.</p>",
                true );
            }
            if( !proceed ) break;
          }
          if( !proceed ) break;
        }

        if( proceed ) {
          var args = new Object();
          args.parameter_list = window.parameter_list;
          slot_load( {{ slot }}, "{{ widget.subject }}", "{{ widget.name }}", args );
        }
      } );
    } );
  </script>

{% endblock javascript %}

{% block widget %}
  <div class="ui-widget ui-widget-content app-widget-content">
    <div class="spacer">
      Provide search parameters then click the search button to be provided with a list of
      participants who match those parameters.  Wildcards can be used in the following
      manner:
      <ul>
        <li>use "_" to match any single character</li>
        <li>use "%" to match an arbitrary number of characters (including zero characters)</li>
      </ul>
      A few things to keep in mind:
      <ul>
        <li>date of birth will always be in YYYY-MM-DD format</li>
        <li>phone numbers are usually in 000-000-0000 format, but they may not be (i.e.:
            000 000 0000, (000) 000-0000, etc)</li>
        <li>postcodes will either be in A0A 0A0 or 00000 format</li>
        <li>gender should be fully spelled out, e.g.: "male" or "female"</li>
      </ul>
    </div>
    <table id="{{ widget.full }}__form" />
    <div class="spacer" style="text-align: right">
      <button id="{{ widget.full }}__add_scenario" stype="width:120px">Add Scenario</button>
      <button id="{{ widget.full }}__search" style="width:120px">Search</button>
    </div>
    
    {% from 'macros.twig' import include_list %}
    {{ include_list( 'participant', participant_list|default(false), true ) }}
  </div>
{% endblock widget %}
