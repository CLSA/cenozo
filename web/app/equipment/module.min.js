cenozoApp.defineModule({name:"equipment",dependencies:"equipment_type",models:["add","list","view"],create:module=>{angular.extend(module,{identifier:{parent:[{subject:"equipment_type",column:"equipment_type.name"},{subject:"site",column:"site.name"}]},name:{singular:"equipment",plural:"equipment",possessive:"equipment's"},columnList:{equipment_type:{column:"equipment_type.name",title:"Equipment Type"},active:{title:"Active",type:"boolean"},site:{column:"site.name",title:"Site"},serial_number:{title:"Serial Number"},status:{title:"Status"},uid:{column:"participant.uid",title:"On Loan"},note:{column:"equipment.note",title:"Note",type:"text"}},defaultOrder:{column:"serial_number",reverse:false}});module.addInputGroup("",{equipment_type_id:{title:"Equipment Type",type:"enum",isConstant:"view",isExcluded:function($state,model){return"equipment_type"==model.getSubjectFromState()}},active:{title:"Active",type:"boolean",help:"Only active equipment can be selected by Pine's equipment type questions."},site_id:{title:"Site",type:"enum",isExcluded:function($state,model){return!model.showSite()}},serial_number:{title:"Serial Number",type:"string",format:"identifier"},status:{title:"Status",type:"string",isConstant:true,isExcluded:"add",help:'Will show "new" if never loaned out, "loaned" if currently on loan, "returned" if ready to re-distribute, and "lost" if never returned.'},participant_id:{column:"participant.id",title:"On Loan To",type:"lookup-typeahead",typeahead:{table:"participant",select:'CONCAT( participant.first_name, " ", participant.last_name, " (", uid, ")" )',where:["participant.first_name","participant.last_name","uid"]},isConstant:true,isExcluded:"add"},note:{title:"Note",type:"text"}});cenozo.providers.factory("CnEquipmentAddFactory",["CnBaseAddFactory","CnHttpFactory",function(CnBaseAddFactory,CnHttpFactory){var object=function(parentModel){CnBaseAddFactory.construct(this,parentModel);this.onNew=async function(record){this.heading="Create "+parentModel.module.name.singular.ucWords();await this.$$onNew(record);const parentIdentifier=parentModel.getParentIdentifier();if("equipment_type"==parentIdentifier.subject){const response=await CnHttpFactory.instance({path:"equipment_type/"+parentModel.getParentIdentifier().identifier,data:{select:{column:"name"}}}).get();this.heading="Create "+response.data.name}else if("site"==parentIdentifier.subject){const response=await CnHttpFactory.instance({path:"site/"+parentModel.getParentIdentifier().identifier,data:{select:{column:"name"}}}).get();this.heading="Create Equipment for "+response.data.name}else{this.heading="Create Equipment"}}};return{instance:function(parentModel){return new object(parentModel)}}}]);cenozo.providers.factory("CnEquipmentModelFactory",["CnBaseModelFactory","CnEquipmentAddFactory","CnEquipmentListFactory","CnEquipmentViewFactory","CnSession","CnHttpFactory",function(CnBaseModelFactory,CnEquipmentAddFactory,CnEquipmentListFactory,CnEquipmentViewFactory,CnSession,CnHttpFactory){var object=function(root){CnBaseModelFactory.construct(this,module);angular.extend(this,{addModel:CnEquipmentAddFactory.instance(this),listModel:CnEquipmentListFactory.instance(this),viewModel:CnEquipmentViewFactory.instance(this,root),showSite:function(){return CnSession.role.allSites&&"site"!=this.getSubjectFromState()},getAddEnabled:function(){return angular.isDefined(this.module.actions.add)},getMetadata:async function(){await this.$$getMetadata();const[equipmentTypeResponse,siteResponse]=await Promise.all([await CnHttpFactory.instance({path:"equipment_type",data:{select:{column:["id","name"]},modifier:{order:"name",limit:1e3}}}).query(),await CnHttpFactory.instance({path:"site",data:{select:{column:["id","name"]},modifier:{order:"name",limit:1e3}}}).query()]);this.metadata.columnList.equipment_type_id.enumList=[];equipmentTypeResponse.data.forEach(item=>{this.metadata.columnList.equipment_type_id.enumList.push({value:item.id,name:item.name})});this.metadata.columnList.site_id.enumList=[];siteResponse.data.forEach(item=>{this.metadata.columnList.site_id.enumList.push({value:item.id,name:item.name})})}})};return{root:new object(true),instance:function(){return new object(false)}}}])}});
