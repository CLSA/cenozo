define(function(){"use strict";try{var module=cenozoApp.module("site",true)}catch(err){console.warn(err);return}angular.extend(module,{identifier:{column:"name"},name:{singular:"site",plural:"sites",possessive:"site's",friendlyColumn:"name"},columnList:{name:{column:"site.name",title:"Name"},role_count:{title:"Roles",type:"number"},user_count:{title:"Users",type:"number"},participant_count:{title:"Participants",type:"number"},last_access_datetime:{title:"Last Access",type:"datetime"}},defaultOrder:{column:"name",reverse:false}});module.addInputGroup("",{name:{title:"Name",type:"string"},timezone:{title:"Time Zone",type:"typeahead",typeahead:moment.tz.names()},title:{title:"Institution",type:"string"},phone_number:{title:"Phone Number",type:"string"},address1:{title:"Address1",type:"string"},address2:{title:"Address2",type:"string"},city:{title:"City",type:"string"},region_id:{title:"Region",type:"enum",isExcluded:"add",isConstant:true,help:"Cannot be changed once the site has been created."},postcode:{title:"Postcode",type:"string",help:'Must be in "A1A 1A1" format, zip codes in "01234" format.'}});try{var settingModule=cenozoApp.module("setting");if(angular.isDefined(settingModule.actions.view)){module.addExtraOperation("view",{title:"Settings",operation:function($state,model){$state.go("setting.view",{identifier:"site_id="+model.viewModel.record.id})}})}}catch(err){}cenozo.providers.directive("cnSiteAdd",["CnSiteModelFactory",function(CnSiteModelFactory){return{templateUrl:module.getFileUrl("add.tpl.html"),restrict:"E",scope:{model:"=?"},controller:function($scope){if(angular.isUndefined($scope.model))$scope.model=CnSiteModelFactory.root}}}]);cenozo.providers.directive("cnSiteList",["CnSiteModelFactory",function(CnSiteModelFactory){return{templateUrl:module.getFileUrl("list.tpl.html"),restrict:"E",scope:{model:"=?"},controller:function($scope){if(angular.isUndefined($scope.model))$scope.model=CnSiteModelFactory.root}}}]);cenozo.providers.directive("cnSiteView",["CnSiteModelFactory",function(CnSiteModelFactory){return{templateUrl:module.getFileUrl("view.tpl.html"),restrict:"E",scope:{model:"=?"},controller:function($scope){if(angular.isUndefined($scope.model))$scope.model=CnSiteModelFactory.root}}}]);cenozo.providers.factory("CnSiteAddFactory",["CnBaseAddFactory",function(CnBaseAddFactory){var object=function(parentModel){CnBaseAddFactory.construct(this,parentModel)};return{instance:function(parentModel){return new object(parentModel)}}}]);cenozo.providers.factory("CnSiteListFactory",["CnBaseListFactory",function(CnBaseListFactory){var object=function(parentModel){CnBaseListFactory.construct(this,parentModel)};return{instance:function(parentModel){return new object(parentModel)}}}]);cenozo.providers.factory("CnSiteViewFactory",["CnBaseViewFactory",function(CnBaseViewFactory){var object=function(parentModel,root){var self=this;CnBaseViewFactory.construct(this,parentModel,root);this.onPatch=function(data){return self.$$onPatch(data).then(function(){if(angular.isDefined(data.postcode))self.onView()})}};return{instance:function(parentModel,root){return new object(parentModel,root)}}}]);cenozo.providers.factory("CnSiteModelFactory",["CnBaseModelFactory","CnSiteListFactory","CnSiteAddFactory","CnSiteViewFactory","CnHttpFactory",function(CnBaseModelFactory,CnSiteListFactory,CnSiteAddFactory,CnSiteViewFactory,CnHttpFactory){var object=function(root){var self=this;CnBaseModelFactory.construct(this,module);this.addModel=CnSiteAddFactory.instance(this);this.listModel=CnSiteListFactory.instance(this);this.viewModel=CnSiteViewFactory.instance(this,root);this.getMetadata=function(){return this.$$getMetadata().then(function(){return CnHttpFactory.instance({path:"region",data:{select:{column:["id","country",{column:'CONCAT_WS( ", ", name, country )',alias:"name",table_prefix:false}]},modifier:{order:["country","name"],limit:100}}}).query().then(function success(response){self.metadata.columnList.region_id.enumList=[];response.data.forEach(function(item){self.metadata.columnList.region_id.enumList.push({value:item.id,country:item.country,name:item.name})})})})}};return{root:new object(true),instance:function(){return new object(false)}}}])});
