define(["trace"].reduce(function(list,name){return list.concat(cenozoApp.module(name).getRequiredFiles())},[]),function(){"use strict";try{var module=cenozoApp.module("phone",true)}catch(err){console.warn(err);return}angular.extend(module,{identifier:{parent:[{subject:"participant",column:"participant.uid"},{subject:"alternate",column:"alternate_id"}]},name:{singular:"phone number",plural:"phone numbers",possessive:"phone number's",friendlyColumn:"rank"},columnList:{rank:{title:"Rank",type:"rank"},number:{title:"Number"},type:{title:"Type"},active:{column:"phone.active",title:"Active",type:"boolean"}},defaultOrder:{column:"rank",reverse:false}});module.addInputGroup("",{address_id:{title:"Associated Address",type:"enum",help:"The address that this phone number is associated with, if any."},active:{title:"Active",type:"boolean"},international:{title:"International",type:"boolean",help:"Cannot be changed once the phone number has been created.",constant:"view"},rank:{title:"Rank",type:"rank"},type:{title:"Type",type:"enum"},number:{title:"Number",type:"string",help:"If not international then must be in 000-000-0000 format."},note:{title:"Note",type:"text"}});cenozo.providers.directive("cnPhoneAdd",["CnPhoneModelFactory",function(CnPhoneModelFactory){return{templateUrl:module.getFileUrl("add.tpl.html"),restrict:"E",scope:{model:"=?"},controller:function($scope){if(angular.isUndefined($scope.model))$scope.model=CnPhoneModelFactory.root}}}]);cenozo.providers.directive("cnPhoneList",["CnPhoneModelFactory",function(CnPhoneModelFactory){return{templateUrl:module.getFileUrl("list.tpl.html"),restrict:"E",scope:{model:"=?"},controller:function($scope){if(angular.isUndefined($scope.model))$scope.model=CnPhoneModelFactory.root}}}]);cenozo.providers.directive("cnPhoneView",["CnPhoneModelFactory",function(CnPhoneModelFactory){return{templateUrl:module.getFileUrl("view.tpl.html"),restrict:"E",scope:{model:"=?"},controller:function($scope){if(angular.isUndefined($scope.model))$scope.model=CnPhoneModelFactory.root}}}]);cenozo.providers.factory("CnPhoneAddFactory",["CnBaseAddFactory","CnTraceModelFactory","$q",function(CnBaseAddFactory,CnTraceModelFactory,$q){var object=function(parentModel){var self=this;CnBaseAddFactory.construct(this,parentModel);var traceModel=CnTraceModelFactory.root;this.onNew=function(record){return this.$$onNew(record).then(function(){return self.parentModel.updateAssociatedAddressList()})};this.onAdd=function(record){var id=this.parentModel.getParentIdentifier().identifier;return traceModel.checkForTraceResolvedAfterPhoneAdded(id).then(function(response){if(response){return self.$$onAdd(record).then(function(){if(angular.isString(response))return traceModel.setTraceReason(id,response)})}else{return $q.reject()}})}};return{instance:function(parentModel){return new object(parentModel)}}}]);cenozo.providers.factory("CnPhoneListFactory",["CnBaseListFactory","CnTraceModelFactory","$q",function(CnBaseListFactory,CnTraceModelFactory,$q){var object=function(parentModel){var self=this;CnBaseListFactory.construct(this,parentModel);var traceModel=CnTraceModelFactory.root;this.onDelete=function(record){var id=this.parentModel.getParentIdentifier().identifier;return traceModel.checkForTraceRequiredAfterPhoneRemoved(id).then(function(response){if(response){return self.$$onDelete(record).then(function(){if(angular.isString(response))return traceModel.setTraceReason(id,response)})}else{return $q.reject()}})}};return{instance:function(parentModel){return new object(parentModel)}}}]);cenozo.providers.factory("CnPhoneViewFactory",["CnBaseViewFactory","CnTraceModelFactory","$q",function(CnBaseViewFactory,CnTraceModelFactory,$q){var object=function(parentModel,root){var self=this;CnBaseViewFactory.construct(this,parentModel,root);var traceModel=CnTraceModelFactory.root;this.onView=function(){return this.$$onView().then(function(){return self.parentModel.updateAssociatedAddressList()})};this.onPatch=function(data){var id=this.parentModel.getParentIdentifier().identifier;if(angular.isDefined(data.active)){if(data.active){return traceModel.checkForTraceResolvedAfterPhoneAdded(id).then(function(response){if(response){return self.$$onPatch(data).then(function(){if(angular.isString(response))return traceModel.setTraceReason(id,response)})}else{return $q.reject()}})}else{return traceModel.checkForTraceRequiredAfterPhoneRemoved(id).then(function(response){if(response){return self.$$onPatch(data).then(function(){if(angular.isString(response))return traceModel.setTraceReason(id,response)})}else{return $q.reject()}})}}return this.$$onPatch(data)};this.onDelete=function(){var id=this.parentModel.getParentIdentifier().identifier;return traceModel.checkForTraceRequiredAfterPhoneRemoved(id).then(function(response){if(response){return self.$$onDelete().then(function(){if(angular.isString(response))return traceModel.setTraceReason(id,response)})}else{return $q.reject()}})}};return{instance:function(parentModel,root){return new object(parentModel,root)}}}]);cenozo.providers.factory("CnPhoneModelFactory",["CnBaseModelFactory","CnPhoneListFactory","CnPhoneAddFactory","CnPhoneViewFactory","CnHttpFactory",function(CnBaseModelFactory,CnPhoneListFactory,CnPhoneAddFactory,CnPhoneViewFactory,CnHttpFactory){var object=function(root){CnBaseModelFactory.construct(this,module);this.addModel=CnPhoneAddFactory.instance(this);this.listModel=CnPhoneListFactory.instance(this);this.viewModel=CnPhoneViewFactory.instance(this,root);var self=this;this.updateAssociatedAddressList=function(){var parent=self.getParentIdentifier();return CnHttpFactory.instance({path:angular.isDefined(parent.subject)?[parent.subject,parent.identifier,"address"].join("/"):self.getServiceCollectionPath().replace("phone","address"),data:{select:{column:["id","summary"]},modifier:{order:"rank"}}}).query().then(function success(response){self.metadata.columnList.address_id.enumList=[];response.data.forEach(function(item){self.metadata.columnList.address_id.enumList.push({value:item.id,name:item.summary})})})}};return{root:new object(true),instance:function(){return new object(false)}}}])});
